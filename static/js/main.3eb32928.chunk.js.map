{"version":3,"sources":["hooks/useLocalStorage.js","App.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","window","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","require","Configuration","OpenAIApi","Router","props","route","style","width","onClick","e","setIsRequesting","apiKey","openai","createCompletion","model","prompt","input","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","rawResponse","data","choices","text","trim","setResult","marginTop","disabled","isRequesting","maxWidth","minWidth","textAlign","minHeight","padding","fontFamily","placeholder","result","display","justifyContent","flexDirection","alignItems","defaultChecked","type","id","name","for","fontSize","RouteLink","setRoute","tag","color","borderTop","cursor","wordSpacing","flexBasis","App","setApiKey","apiKeyTemp","setApiKeyTemp","setInput","position","top","right","className","borderRadius","margin","marginBottom","fontWeight","marginLeft","src","textDecoration","height","onChange","target","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.3eb32928.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    if (typeof window === \"undefined\") {\r\n      return initialValue;\r\n    }\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      if (typeof window !== \"undefined\") {\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      }\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\n","import './styles.css'\nimport useLocalStorage from './hooks/useLocalStorage'\nimport { useState } from 'react'\nconst { Configuration, OpenAIApi } = require('openai')\n\nconst configureOpenai = apiKey => new OpenAIApi(new Configuration({ apiKey }))\n\nconst Router = props => {\n  switch (props.route) {\n    case 'improve':\n      return (\n        <div style={{ width: '100%' }}>\n          {/* <h3>Instructions for improvements</h3>\n          <textarea\n            placeholder=\"instructions\"\n            style={{\n              width: '100%',\n              maxWidth: '100%',\n              minWidth: '100%',\n              height: '15vh',\n              fontFamily: 'Open Sans, sans-serif',\n              fontWeight: 400,\n              padding: 5,\n              // color: '#000',\n            }}\n            value=\"You are a brillant professional copywriter. Rewrite the above text fixing typos and applying improvements\"\n          /> */}\n          <button\n            onClick={async e => {\n              const instructions =\n                'You are a brillant professional copywriter. Rewrite the above text fixing typos and applying improvements'\n              props.setIsRequesting(true)\n              const openai = configureOpenai(props.apiKey)\n              const rawResponse = await openai.createCompletion({\n                model: 'text-davinci-003',\n                prompt: props.input + '\\n\\n######## ' + instructions + '\\n\\n',\n                temperature: 0.7,\n                max_tokens: 256,\n                top_p: 1,\n                frequency_penalty: 0,\n                presence_penalty: 0,\n              })\n              console.log(rawResponse.data.choices[0].text.trim())\n              props.setResult(rawResponse.data.choices[0].text.trim())\n              props.setIsRequesting(false)\n            }}\n            style={{ marginTop: 5 }}\n            disabled={props.isRequesting}\n          >\n            Improve\n          </button>\n          <h3>Result</h3>\n          <textarea\n            style={{\n              // backgroundColor: 'red',\n              width: '100%',\n              maxWidth: '100%',\n              minWidth: '100%',\n              textAlign: 'left',\n              minHeight: '10vh',\n              padding: 5,\n              fontFamily: 'Open Sans, sans-serif',\n\n              // border: 'solid 1px black',\n              // borderRadius: 2,\n              // border: 'solid 1px rgb(100, 100, 100)',\n            }}\n            placeholder=\"results\"\n            value={props.result}\n          ></textarea>\n        </div>\n      )\n    case 'review':\n      return (\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '100%',\n          }}\n        >\n          <div\n            style={{\n              textAlign: 'left',\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'flex-start',\n              }}\n            >\n              <h3>Reviewers</h3>\n              <span>\n                <input\n                  defaultChecked=\"true\"\n                  type=\"checkbox\"\n                  id=\"grammar_guru\"\n                  name=\"grammar_guru\"\n                />\n                <label for=\"grammar_guru\">🧐 Grammar Guru</label>\n              </span>\n              <i\n                style={{\n                  fontSize: 12,\n                }}\n              >\n                Grammar & Typos\n              </i>\n              <br />\n              <span>\n                <input\n                  defaultChecked=\"true\"\n                  type=\"checkbox\"\n                  id=\"balanced_ben\"\n                  name=\"balanced_ben\"\n                />\n                <label for=\"balanced_ben\">😐 Balanced Ben</label>\n              </span>\n              <i\n                style={{\n                  fontSize: 12,\n                }}\n              >\n                Stengths & Weankesses\n              </i>\n              <br />\n              <span>\n                <input\n                  defaultChecked=\"true\"\n                  type=\"checkbox\"\n                  id=\"technical_tron\"\n                  name=\"technical_tron\"\n                />\n                <label for=\"technical_tron\">🤖 Technical Tron</label>\n              </span>\n              <i\n                style={{\n                  fontSize: 12,\n                }}\n              >\n                Facts & Technicals\n              </i>\n              <br />\n            </div>\n            <button>Review</button>\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n            }}\n          >\n            <h3>Result</h3>\n            <textarea\n              style={{\n                // backgroundColor: 'red',\n                width: '100%',\n                maxWidth: '100%',\n                minWidth: '100%',\n                textAlign: 'left',\n                minHeight: '10vh',\n                // opacity: 0,\n                padding: 5,\n                // border: 'solid 1px black',\n                // borderRadius: 2,\n                // border: 'solid 1px rgb(100, 100, 100)',\n              }}\n              placeholder=\"results\"\n            ></textarea>\n          </div>\n        </div>\n      )\n    case 'diagram':\n      return <div>diagram</div>\n    case 'document':\n      return <div>document</div>\n    case 'mdtable':\n      return <div>mdtable</div>\n    case 'summarizer':\n      return <div>summarizer</div>\n    case 'reviewpr':\n      return <div>review pr</div>\n    case 'words':\n      return <div>alternative words</div>\n    default:\n      return <div>Route Error: {route}</div>\n  }\n}\n\nconst RouteLink = props => (\n  <a\n    onClick={() => {\n      !props.disabled && props.setRoute(props.tag)\n    }}\n    style={{\n      color: props.route === props.tag ? 'black' : '#eee',\n      borderTop:\n        props.route === props.tag ? 'solid 1px black' : 'solid 1px transparent',\n      // borderBottom:\n      //   props.route === props.tag ? 'solid 1px black' : 'solid 1px transparent',\n      // borderRadius: 1,\n      cursor: !props.disabled ? 'pointer' : 'default',\n      // width: 50,\n      wordSpacing: '100%',\n      flexBasis: 0,\n    }}\n  >\n    {/* {props.route === props.tag && '> '} */}\n    {props.text}\n  </a>\n)\n\nexport default function App() {\n  const [apiKey, setApiKey] = useLocalStorage('key', null)\n  const [apiKeyTemp, setApiKeyTemp] = useState(null)\n  const [route, setRoute] = useLocalStorage('route', 'review')\n  const [input, setInput] = useState('')\n  const [result, setResult] = useState('')\n  const [isRequesting, setIsRequesting] = useState(false)\n\n  return (\n    <div\n      style={{\n        fontFamily: 'sans-serif',\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <p\n        style={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          padding: '5px 20px',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n        }}\n      >\n        {apiKey && (\n          <button\n            className=\"inverse\"\n            onClick={() => setApiKey(null)}\n            style={{\n              padding: '5px 10px',\n              borderRadius: 3,\n            }}\n          >\n            X\n          </button>\n        )}\n      </p>\n      <h1\n        style={{\n          fontFamily: 'Oswald, sans-serif',\n          fontSize: 52,\n          color: 'black',\n          margin: '20px 0px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginBottom: 0,\n          marginTop: 30,\n        }}\n      >\n        <span\n          style={{\n            fontWeight: 300,\n          }}\n        >\n          Docu\n        </span>\n        <span\n          style={{\n            fontWeight: 500,\n          }}\n        >\n          Droid\n        </span>\n        <img style={{ marginLeft: 5 }} src=\"./logo.png\" width=\"80px\" />\n      </h1>\n      {/* <p>version: 5 </p> */}\n      {apiKey ? (\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            maxWidth: 960,\n            width: '95%',\n          }}\n        >\n          <div\n            style={{\n              // width: '95%',\n              display: 'flex',\n              flexDirection: 'row',\n              marginTop: 21,\n              fontFamily: 'Open Sans, sans-serif',\n              fontWeight: 400,\n              justifyContent: 'space-between',\n              // position: 'absolute',\n              // left: '20px',\n              // top: 0,\n              fontSize: 14,\n              textDecoration: 'none',\n              width: '100%',\n              textAlign: 'left',\n            }}\n          >\n            <RouteLink\n              route={route}\n              setRoute={setRoute}\n              tag=\"improve\"\n              text=\"improve text\"\n            />\n            <RouteLink\n              disabled\n              route={route}\n              setRoute={setRoute}\n              tag=\"review\"\n              text=\"review text\"\n            />\n            <RouteLink\n              disabled\n              route={route}\n              setRoute={setRoute}\n              tag=\"reviewpr\"\n              text=\"review diff\"\n            />\n            <RouteLink\n              disabled\n              route={route}\n              setRoute={setRoute}\n              tag=\"diagram\"\n              text=\"diagram gen\"\n            />\n            <RouteLink\n              disabled\n              route={route}\n              setRoute={setRoute}\n              tag=\"document\"\n              text=\"docs gen\"\n            />\n            <RouteLink\n              disabled\n              route={route}\n              setRoute={setRoute}\n              tag=\"mdtable\"\n              text=\"md gen\"\n            />\n            <RouteLink\n              disabled\n              route={route}\n              setRoute={setRoute}\n              tag=\"summarizer\"\n              text=\"reduce text\"\n            />\n            <RouteLink\n              disabled\n              route={route}\n              setRoute={setRoute}\n              tag=\"words\"\n              text=\"alt words\"\n            />\n          </div>\n\n          <span\n            style={{\n              width: '100%',\n              marginTop: 25,\n            }}\n          >\n            {/* <h3\n              style={{\n                textAlign: 'right',\n              }}\n            >\n              Input\n            </h3> */}\n          </span>\n          <textarea\n            placeholder=\"input text goes here\"\n            style={{\n              width: '100%',\n              maxWidth: '100%',\n              minWidth: '100%',\n              height: '15vh',\n              fontFamily: 'Open Sans, sans-serif',\n              fontWeight: 400,\n              padding: 5,\n              // color: '#000',\n            }}\n            onChange={e => setInput(e.target.value)}\n          />\n          <div\n            style={{\n              marginTop: 0,\n              fontFamily: 'Open Sans, sans-serif',\n              fontWeight: 400,\n              width: '100%',\n            }}\n          >\n            <Router\n              route={route}\n              result={result}\n              input={input}\n              setResult={setResult}\n              apiKey={apiKey}\n              isRequesting={isRequesting}\n              setIsRequesting={setIsRequesting}\n            />\n          </div>\n        </div>\n      ) : (\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <br />\n          <label style={{ marginBottom: 2 }} for=\"key\">\n            Insert GPT3 Key\n            <br />\n            <i style={{ fontSize: 12 }}>\n              (saved in browser localstorage, logout to clean)\n            </i>\n          </label>\n          <input\n            style={{\n              width: 400,\n              textAlign: 'center',\n              padding: 7,\n            }}\n            id=\"key\"\n            type=\"text\"\n            onChange={e => setApiKeyTemp(e.target.value)}\n          />\n          <br />\n          <button onClick={() => setApiKey(apiKeyTemp)}>Start!</button>\n        </div>\n      )}\n    </div>\n  )\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}